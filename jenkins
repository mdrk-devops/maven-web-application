node{

buildName 'dev-$(BUILD_NUMBER)'

def mavenhome = tool name: "maven3.8.5"

echo "the node name is: ${env.NODE_NAME}"
echo "the job name is: ${env.JOB_NAME}"
echo "the build number is: ${env.BUILD_NUMBER}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

//checkoutstage
stage('checkoutcode'){
git branch: 'development', credentialsId: '18dc9893-d96d-4e0a-817d-199c6d502570', url: 'https://github.com/mdrk-devops/maven-web-application.git'
}

//build stage
stage('build'){
sh "$mavenhome/bin/mvn clean package"
}
/*
//sonarqube report
stage('sonarqube report'){
sh "$mavenhome/bin/mvn sonar:sonar"
}

//upload artifact
stage('upload artifact'){
sh "$mavenhome/bin/mvn deploy"
}

//deploy app in tomcat
stage('deploy app in tomcat'){
sshagent(['33e90e12-7fc5-413c-b0d1-f3228ec579fa']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.232.51.166:/opt/apache-tomcat-9.0.59/webapps"
}
}
*/
}//node closing
